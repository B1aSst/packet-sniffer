from scapy.all import *


def wireshark_maison(trame):
    """regarde les protocoles que contienne la trame est envoie sur le bon programme"""
    if (
        trame[TCP].dport == 21
        or trame[TCP].dport == 20
        or trame[TCP].sport == 21
        or trame[TCP].sport == 20
    ):
        login(trame)

    #       except :
    #           print("pas d'ip")
    # except :
    #    print("pas d'ethernet")
    # trame.show ()


def check_login(nomutil, mdp):
    """recupérer le mon d'utilisateur et le password"""
    print("Nom d'utilisateur ", nomutil, "\n", "Mot de passe : ", mdp)


def verifie_ftp(trame):
    """vérifie la présence de ftp dans les trames"""
    try:
        if (
            trame[TCP].dport == 21
            or trame[TCP].sport == 21
            or trame[TCP].dport == 20
            or trame[TCP].sport == 20
        ):
            return True
    except:
        return False


id_util = []
mdp = []


def login(trame):
    global mdp, id_until
    if verifie_ftp(trame):
        pass
    else:
        print("no")
        return
    try:
        a = trame[Raw].load
        if (a[0:4]) == b"USER":
            a = a.decode("UTF-8").split()
            id_until = a[1]
        if "PASS" in str(a):
            a = a.decode("UTF-8").split()
            mdp = a[1]
        if "230" in str(a):
            check_login(id_until, mdp)
        if "RETR" in str(a):
            data = a.decode("UTF-8").split()
            print(data[1])
        if "pass" in str(a):
            a = trame[Raw].load
    except:
        pass
    try:
        if "Passive Mode" in str(a):
            port1 = a[26:45]

            print(port1)
        if trame[TCP].sport == 20:
            print("fichier")
            recup_fichier(trame)
            print(liste_fichier)
        if (a[0:3]) == b"226":
            fichier_fini(data[1])
    except:
        pass
    return


liste_fichier = []


def recup_fichier(trame):
    global liste_fichier
    data = trame[i].load
    # print(data)
    liste_fichier.append(data)


def fichier_fini(nom_fichier):
    liste_fichier = liste_fichier[1:]
    # print(liste_fichier)
    fichier = open("{nom_fichier}", "wb")
    fichier.writelines(liste_fichier)
    fichier.close()


sniff(filter="tcp", prn=wireshark_maison, iface=conf.iface)
